
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftCONCATCOLON COMMA COMMENT CONCAT DIVIDE END EQUALS FUNCTION ID INPUT INTERPOLATION LBRACKET LPAREN MINUS MULTILINE_COMMENT NUMBER PLUS PRINT RANDOM RBRACKET RPAREN SEMICOLON STRING TIMESstatements : statements statement\n                  | statementstatement : ID EQUALS expression SEMICOLONstatement : ID EQUALS STRING SEMICOLONstatement : PRINT LPAREN STRING RPAREN SEMICOLONstatement : PRINT LPAREN expression RPAREN SEMICOLONstatement : expression SEMICOLONstatement : FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON\n                 | FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLONstatement : FUNCTION ID LPAREN param_list RPAREN COLON statements END\n                 | FUNCTION ID LPAREN RPAREN COLON statements ENDparam_list : param_list COMMA ID\n                  | IDstatement : ENDexpression : INPUT LPAREN RPARENexpression : RANDOM LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression CONCAT expressionexpression : LPAREN expression RPARENexpression : STRINGexpression : NUMBERexpression : IDexpression : ID LPAREN arg_list RPARENarg_list : arg_list COMMA expression\n                | expression'
    
_lr_action_items = {'ID':([0,1,2,7,8,9,13,14,15,16,17,18,19,20,21,22,27,40,43,44,46,54,55,57,59,61,63,64,65,66,68,70,71,72,],[3,3,-2,24,25,-14,-1,24,24,-7,24,24,24,24,24,24,24,49,-3,-4,24,-5,-6,62,3,3,24,3,24,3,-11,-10,-9,-8,]),'PRINT':([0,1,2,9,13,16,43,44,54,55,59,61,64,66,68,70,71,72,],[6,6,-2,-14,-1,-7,-3,-4,-5,-6,6,6,6,6,-11,-10,-9,-8,]),'FUNCTION':([0,1,2,9,13,16,43,44,54,55,59,61,64,66,68,70,71,72,],[8,8,-2,-14,-1,-7,-3,-4,-5,-6,8,8,8,8,-11,-10,-9,-8,]),'END':([0,1,2,9,13,16,43,44,54,55,59,61,64,66,68,70,71,72,],[9,9,-2,-14,-1,-7,-3,-4,-5,-6,9,9,68,70,-11,-10,-9,-8,]),'INPUT':([0,1,2,7,9,13,14,15,16,17,18,19,20,21,22,27,43,44,46,54,55,59,61,63,64,65,66,68,70,71,72,],[10,10,-2,10,-14,-1,10,10,-7,10,10,10,10,10,10,10,-3,-4,10,-5,-6,10,10,10,10,10,10,-11,-10,-9,-8,]),'RANDOM':([0,1,2,7,9,13,14,15,16,17,18,19,20,21,22,27,43,44,46,54,55,59,61,63,64,65,66,68,70,71,72,],[11,11,-2,11,-14,-1,11,11,-7,11,11,11,11,11,11,11,-3,-4,11,-5,-6,11,11,11,11,11,11,-11,-10,-9,-8,]),'LPAREN':([0,1,2,3,6,7,9,10,11,13,14,15,16,17,18,19,20,21,22,24,25,27,43,44,46,54,55,59,61,63,64,65,66,68,70,71,72,],[7,7,-2,15,22,7,-14,26,27,-1,7,7,-7,7,7,7,7,7,7,15,40,7,-3,-4,7,-5,-6,7,7,7,7,7,7,-11,-10,-9,-8,]),'STRING':([0,1,2,7,9,13,14,15,16,17,18,19,20,21,22,27,43,44,46,54,55,59,61,63,64,65,66,68,70,71,72,],[5,5,-2,5,-14,-1,29,5,-7,5,5,5,5,5,37,5,-3,-4,5,-5,-6,5,5,5,5,5,5,-11,-10,-9,-8,]),'NUMBER':([0,1,2,7,9,13,14,15,16,17,18,19,20,21,22,27,43,44,46,54,55,59,61,63,64,65,66,68,70,71,72,],[12,12,-2,12,-14,-1,12,12,-7,12,12,12,12,12,12,12,-3,-4,12,-5,-6,12,12,12,12,12,12,-11,-10,-9,-8,]),'$end':([1,2,9,13,16,43,44,54,55,68,70,71,72,],[0,-2,-14,-1,-7,-3,-4,-5,-6,-11,-10,-9,-8,]),'EQUALS':([3,],[14,]),'SEMICOLON':([3,4,5,12,24,28,29,32,33,34,35,36,39,41,45,47,48,52,67,69,],[-25,16,-23,-24,-25,43,44,-17,-18,-19,-20,-21,-22,-15,-26,54,55,-16,71,72,]),'PLUS':([3,4,5,12,23,24,28,29,31,32,33,34,35,36,37,38,39,41,42,45,52,53,67,69,],[-25,17,-23,-24,17,-25,17,-23,17,-17,-18,-19,-20,-21,-23,17,-22,-15,17,-26,-16,17,17,17,]),'MINUS':([3,4,5,12,23,24,28,29,31,32,33,34,35,36,37,38,39,41,42,45,52,53,67,69,],[-25,18,-23,-24,18,-25,18,-23,18,-17,-18,-19,-20,-21,-23,18,-22,-15,18,-26,-16,18,18,18,]),'TIMES':([3,4,5,12,23,24,28,29,31,32,33,34,35,36,37,38,39,41,42,45,52,53,67,69,],[-25,19,-23,-24,19,-25,19,-23,19,19,19,-19,-20,-21,-23,19,-22,-15,19,-26,-16,19,19,19,]),'DIVIDE':([3,4,5,12,23,24,28,29,31,32,33,34,35,36,37,38,39,41,42,45,52,53,67,69,],[-25,20,-23,-24,20,-25,20,-23,20,20,20,-19,-20,-21,-23,20,-22,-15,20,-26,-16,20,20,20,]),'CONCAT':([3,4,5,12,23,24,28,29,31,32,33,34,35,36,37,38,39,41,42,45,52,53,67,69,],[-25,21,-23,-24,21,-25,21,-23,21,21,21,21,21,-21,-23,21,-22,-15,21,-26,-16,21,21,21,]),'RPAREN':([5,12,23,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,45,49,50,52,53,62,],[-23,-24,39,-25,41,45,-28,-17,-18,-19,-20,-21,47,48,-22,51,-15,52,-26,-13,56,-16,-27,-12,]),'COMMA':([5,12,24,30,31,32,33,34,35,36,39,41,45,49,50,51,52,53,56,62,],[-23,-24,-25,46,-28,-17,-18,-19,-20,-21,-22,-15,-26,-13,57,58,-16,-27,60,-12,]),'COLON':([51,56,58,60,],[59,61,63,65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,59,61,],[1,64,66,]),'statement':([0,1,59,61,64,66,],[2,13,2,2,13,13,]),'expression':([0,1,7,14,15,17,18,19,20,21,22,27,46,59,61,63,64,65,66,],[4,4,23,28,31,32,33,34,35,36,38,42,53,4,4,67,4,69,4,]),'arg_list':([15,],[30,]),'param_list':([40,],[50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','cparser.py',29),
  ('statements -> statement','statements',1,'p_statements','cparser.py',30),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assign','cparser.py',37),
  ('statement -> ID EQUALS STRING SEMICOLON','statement',4,'p_statement_assign_string','cparser.py',44),
  ('statement -> PRINT LPAREN STRING RPAREN SEMICOLON','statement',5,'p_statement_print_string','cparser.py',51),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_statement_print_expr','cparser.py',66),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','cparser.py',71),
  ('statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON','statement',9,'p_statement_function_oneliner_declaration','cparser.py',74),
  ('statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON','statement',8,'p_statement_function_oneliner_declaration','cparser.py',75),
  ('statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END','statement',8,'p_statement_function_declaration','cparser.py',85),
  ('statement -> FUNCTION ID LPAREN RPAREN COLON statements END','statement',7,'p_statement_function_declaration','cparser.py',86),
  ('param_list -> param_list COMMA ID','param_list',3,'p_param_list','cparser.py',114),
  ('param_list -> ID','param_list',1,'p_param_list','cparser.py',115),
  ('statement -> END','statement',1,'p_statement_end','cparser.py',122),
  ('expression -> INPUT LPAREN RPAREN','expression',3,'p_expression_input','cparser.py',127),
  ('expression -> RANDOM LPAREN expression RPAREN','expression',4,'p_expression_random','cparser.py',133),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','cparser.py',139),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','cparser.py',140),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','cparser.py',141),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','cparser.py',142),
  ('expression -> expression CONCAT expression','expression',3,'p_expression_concat','cparser.py',153),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','cparser.py',162),
  ('expression -> STRING','expression',1,'p_expression_string','cparser.py',166),
  ('expression -> NUMBER','expression',1,'p_expression_number','cparser.py',170),
  ('expression -> ID','expression',1,'p_expression_id','cparser.py',174),
  ('expression -> ID LPAREN arg_list RPAREN','expression',4,'p_expression_function_call','cparser.py',178),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','cparser.py',184),
  ('arg_list -> expression','arg_list',1,'p_arg_list','cparser.py',185),
]
