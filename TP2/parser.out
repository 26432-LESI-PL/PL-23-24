Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    INTERPOLATION
    LBRACKET
    MULTILINE_COMMENT
    RBRACKET

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> ID EQUALS expression SEMICOLON
Rule 4     statement -> ID EQUALS STRING SEMICOLON
Rule 5     statement -> PRINT LPAREN STRING RPAREN SEMICOLON
Rule 6     statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 7     statement -> expression SEMICOLON
Rule 8     statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
Rule 9     statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
Rule 10    statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END
Rule 11    statement -> FUNCTION ID LPAREN RPAREN COLON statements END
Rule 12    param_list -> param_list COMMA ID
Rule 13    param_list -> ID
Rule 14    statement -> END
Rule 15    expression -> INPUT LPAREN RPAREN
Rule 16    expression -> RANDOM LPAREN expression RPAREN
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> expression CONCAT expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> STRING
Rule 24    expression -> NUMBER
Rule 25    expression -> ID
Rule 26    expression -> ID LPAREN arg_list RPAREN
Rule 27    arg_list -> arg_list COMMA expression
Rule 28    arg_list -> expression

Terminals, with rules where they appear

COLON                : 8 9 10 11
COMMA                : 8 9 12 27
COMMENT              : 
CONCAT               : 21
DIVIDE               : 20
END                  : 10 11 14
EQUALS               : 3 4
FUNCTION             : 8 9 10 11
ID                   : 3 4 8 9 10 11 12 13 25 26
INPUT                : 15
INTERPOLATION        : 
LBRACKET             : 
LPAREN               : 5 6 8 9 10 11 15 16 22 26
MINUS                : 18
MULTILINE_COMMENT    : 
NUMBER               : 24
PLUS                 : 17
PRINT                : 5 6
RANDOM               : 16
RBRACKET             : 
RPAREN               : 5 6 8 9 10 11 15 16 22 26
SEMICOLON            : 3 4 5 6 7 8 9
STRING               : 4 5 23
TIMES                : 19
error                : 

Nonterminals, with rules where they appear

arg_list             : 26 27
expression           : 3 6 7 8 9 16 17 17 18 18 19 19 20 20 21 21 22 27 28
param_list           : 8 10 12
statement            : 1 2
statements           : 1 10 11 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . ID EQUALS STRING SEMICOLON
    (5) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (6) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (7) statement -> . expression SEMICOLON
    (8) statement -> . FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> . FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> . FUNCTION ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> . FUNCTION ID LPAREN RPAREN COLON statements END
    (14) statement -> . END
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    ID              shift and go to state 3
    PRINT           shift and go to state 6
    FUNCTION        shift and go to state 8
    END             shift and go to state 9
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . ID EQUALS STRING SEMICOLON
    (5) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (6) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (7) statement -> . expression SEMICOLON
    (8) statement -> . FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> . FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> . FUNCTION ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> . FUNCTION ID LPAREN RPAREN COLON statements END
    (14) statement -> . END
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    ID              shift and go to state 3
    PRINT           shift and go to state 6
    FUNCTION        shift and go to state 8
    END             shift and go to state 9
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12

    statement                      shift and go to state 13
    expression                     shift and go to state 4

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    FUNCTION        reduce using rule 2 (statements -> statement .)
    END             reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    RANDOM          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> ID . EQUALS expression SEMICOLON
    (4) statement -> ID . EQUALS STRING SEMICOLON
    (25) expression -> ID .
    (26) expression -> ID . LPAREN arg_list RPAREN

    EQUALS          shift and go to state 14
    SEMICOLON       reduce using rule 25 (expression -> ID .)
    PLUS            reduce using rule 25 (expression -> ID .)
    MINUS           reduce using rule 25 (expression -> ID .)
    TIMES           reduce using rule 25 (expression -> ID .)
    DIVIDE          reduce using rule 25 (expression -> ID .)
    CONCAT          reduce using rule 25 (expression -> ID .)
    LPAREN          shift and go to state 15


state 4

    (7) statement -> expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 5

    (23) expression -> STRING .

    SEMICOLON       reduce using rule 23 (expression -> STRING .)
    PLUS            reduce using rule 23 (expression -> STRING .)
    MINUS           reduce using rule 23 (expression -> STRING .)
    TIMES           reduce using rule 23 (expression -> STRING .)
    DIVIDE          reduce using rule 23 (expression -> STRING .)
    CONCAT          reduce using rule 23 (expression -> STRING .)
    RPAREN          reduce using rule 23 (expression -> STRING .)
    COMMA           reduce using rule 23 (expression -> STRING .)


state 6

    (5) statement -> PRINT . LPAREN STRING RPAREN SEMICOLON
    (6) statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 22


state 7

    (22) expression -> LPAREN . expression RPAREN
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 23

state 8

    (8) statement -> FUNCTION . ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> FUNCTION . ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> FUNCTION . ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> FUNCTION . ID LPAREN RPAREN COLON statements END

    ID              shift and go to state 25


state 9

    (14) statement -> END .

    ID              reduce using rule 14 (statement -> END .)
    PRINT           reduce using rule 14 (statement -> END .)
    FUNCTION        reduce using rule 14 (statement -> END .)
    END             reduce using rule 14 (statement -> END .)
    INPUT           reduce using rule 14 (statement -> END .)
    RANDOM          reduce using rule 14 (statement -> END .)
    LPAREN          reduce using rule 14 (statement -> END .)
    STRING          reduce using rule 14 (statement -> END .)
    NUMBER          reduce using rule 14 (statement -> END .)
    $end            reduce using rule 14 (statement -> END .)


state 10

    (15) expression -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 26


state 11

    (16) expression -> RANDOM . LPAREN expression RPAREN

    LPAREN          shift and go to state 27


state 12

    (24) expression -> NUMBER .

    SEMICOLON       reduce using rule 24 (expression -> NUMBER .)
    PLUS            reduce using rule 24 (expression -> NUMBER .)
    MINUS           reduce using rule 24 (expression -> NUMBER .)
    TIMES           reduce using rule 24 (expression -> NUMBER .)
    DIVIDE          reduce using rule 24 (expression -> NUMBER .)
    CONCAT          reduce using rule 24 (expression -> NUMBER .)
    RPAREN          reduce using rule 24 (expression -> NUMBER .)
    COMMA           reduce using rule 24 (expression -> NUMBER .)


state 13

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    END             reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    RANDOM          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)


state 14

    (3) statement -> ID EQUALS . expression SEMICOLON
    (4) statement -> ID EQUALS . STRING SEMICOLON
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    STRING          shift and go to state 29
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 28

state 15

    (26) expression -> ID LPAREN . arg_list RPAREN
    (27) arg_list -> . arg_list COMMA expression
    (28) arg_list -> . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    arg_list                       shift and go to state 30
    expression                     shift and go to state 31

state 16

    (7) statement -> expression SEMICOLON .

    ID              reduce using rule 7 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 7 (statement -> expression SEMICOLON .)
    FUNCTION        reduce using rule 7 (statement -> expression SEMICOLON .)
    END             reduce using rule 7 (statement -> expression SEMICOLON .)
    INPUT           reduce using rule 7 (statement -> expression SEMICOLON .)
    RANDOM          reduce using rule 7 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 7 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 7 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 7 (statement -> expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> expression SEMICOLON .)


state 17

    (17) expression -> expression PLUS . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 32

state 18

    (18) expression -> expression MINUS . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 33

state 19

    (19) expression -> expression TIMES . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 34

state 20

    (20) expression -> expression DIVIDE . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 35

state 21

    (21) expression -> expression CONCAT . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 36

state 22

    (5) statement -> PRINT LPAREN . STRING RPAREN SEMICOLON
    (6) statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    STRING          shift and go to state 37
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 38

state 23

    (22) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    RPAREN          shift and go to state 39
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 24

    (25) expression -> ID .
    (26) expression -> ID . LPAREN arg_list RPAREN

    RPAREN          reduce using rule 25 (expression -> ID .)
    PLUS            reduce using rule 25 (expression -> ID .)
    MINUS           reduce using rule 25 (expression -> ID .)
    TIMES           reduce using rule 25 (expression -> ID .)
    DIVIDE          reduce using rule 25 (expression -> ID .)
    CONCAT          reduce using rule 25 (expression -> ID .)
    SEMICOLON       reduce using rule 25 (expression -> ID .)
    COMMA           reduce using rule 25 (expression -> ID .)
    LPAREN          shift and go to state 15


state 25

    (8) statement -> FUNCTION ID . LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> FUNCTION ID . LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> FUNCTION ID . LPAREN param_list RPAREN COLON statements END
    (11) statement -> FUNCTION ID . LPAREN RPAREN COLON statements END

    LPAREN          shift and go to state 40


state 26

    (15) expression -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 41


state 27

    (16) expression -> RANDOM LPAREN . expression RPAREN
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 42

state 28

    (3) statement -> ID EQUALS expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       shift and go to state 43
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 29

    (4) statement -> ID EQUALS STRING . SEMICOLON
    (23) expression -> STRING .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 44
    PLUS            reduce using rule 23 (expression -> STRING .)
    MINUS           reduce using rule 23 (expression -> STRING .)
    TIMES           reduce using rule 23 (expression -> STRING .)
    DIVIDE          reduce using rule 23 (expression -> STRING .)
    CONCAT          reduce using rule 23 (expression -> STRING .)

  ! SEMICOLON       [ reduce using rule 23 (expression -> STRING .) ]


state 30

    (26) expression -> ID LPAREN arg_list . RPAREN
    (27) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 45
    COMMA           shift and go to state 46


state 31

    (28) arg_list -> expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    RPAREN          reduce using rule 28 (arg_list -> expression .)
    COMMA           reduce using rule 28 (arg_list -> expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 32

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 17 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 17 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21

  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! CONCAT          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]


state 33

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 18 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 18 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21

  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! CONCAT          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]


state 34

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 19 (expression -> expression TIMES expression .)
    CONCAT          shift and go to state 21

  ! CONCAT          [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 35

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 20 (expression -> expression DIVIDE expression .)
    CONCAT          shift and go to state 21

  ! CONCAT          [ reduce using rule 20 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 36

    (21) expression -> expression CONCAT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       reduce using rule 21 (expression -> expression CONCAT expression .)
    PLUS            reduce using rule 21 (expression -> expression CONCAT expression .)
    MINUS           reduce using rule 21 (expression -> expression CONCAT expression .)
    TIMES           reduce using rule 21 (expression -> expression CONCAT expression .)
    DIVIDE          reduce using rule 21 (expression -> expression CONCAT expression .)
    CONCAT          reduce using rule 21 (expression -> expression CONCAT expression .)
    RPAREN          reduce using rule 21 (expression -> expression CONCAT expression .)
    COMMA           reduce using rule 21 (expression -> expression CONCAT expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]
  ! CONCAT          [ shift and go to state 21 ]


state 37

    (5) statement -> PRINT LPAREN STRING . RPAREN SEMICOLON
    (23) expression -> STRING .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 47
    PLUS            reduce using rule 23 (expression -> STRING .)
    MINUS           reduce using rule 23 (expression -> STRING .)
    TIMES           reduce using rule 23 (expression -> STRING .)
    DIVIDE          reduce using rule 23 (expression -> STRING .)
    CONCAT          reduce using rule 23 (expression -> STRING .)

  ! RPAREN          [ reduce using rule 23 (expression -> STRING .) ]


state 38

    (6) statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 39

    (22) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    CONCAT          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 40

    (8) statement -> FUNCTION ID LPAREN . param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> FUNCTION ID LPAREN . RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> FUNCTION ID LPAREN . param_list RPAREN COLON statements END
    (11) statement -> FUNCTION ID LPAREN . RPAREN COLON statements END
    (12) param_list -> . param_list COMMA ID
    (13) param_list -> . ID

    RPAREN          shift and go to state 51
    ID              shift and go to state 49

    param_list                     shift and go to state 50

state 41

    (15) expression -> INPUT LPAREN RPAREN .

    SEMICOLON       reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    PLUS            reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    MINUS           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    TIMES           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    DIVIDE          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    CONCAT          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    RPAREN          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    COMMA           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)


state 42

    (16) expression -> RANDOM LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 43

    (3) statement -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    PRINT           reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    FUNCTION        reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    END             reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    INPUT           reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    RANDOM          reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    STRING          reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 3 (statement -> ID EQUALS expression SEMICOLON .)


state 44

    (4) statement -> ID EQUALS STRING SEMICOLON .

    ID              reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    FUNCTION        reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    END             reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    INPUT           reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    RANDOM          reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    LPAREN          reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    STRING          reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    NUMBER          reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)
    $end            reduce using rule 4 (statement -> ID EQUALS STRING SEMICOLON .)


state 45

    (26) expression -> ID LPAREN arg_list RPAREN .

    SEMICOLON       reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    CONCAT          reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 26 (expression -> ID LPAREN arg_list RPAREN .)


state 46

    (27) arg_list -> arg_list COMMA . expression
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 53

state 47

    (5) statement -> PRINT LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 54


state 48

    (6) statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 55


state 49

    (13) param_list -> ID .

    RPAREN          reduce using rule 13 (param_list -> ID .)
    COMMA           reduce using rule 13 (param_list -> ID .)


state 50

    (8) statement -> FUNCTION ID LPAREN param_list . RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> FUNCTION ID LPAREN param_list . RPAREN COLON statements END
    (12) param_list -> param_list . COMMA ID

    RPAREN          shift and go to state 56
    COMMA           shift and go to state 57


state 51

    (9) statement -> FUNCTION ID LPAREN RPAREN . COMMA COLON expression SEMICOLON
    (11) statement -> FUNCTION ID LPAREN RPAREN . COLON statements END

    COMMA           shift and go to state 58
    COLON           shift and go to state 59


state 52

    (16) expression -> RANDOM LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    PLUS            reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    TIMES           reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    CONCAT          reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)
    COMMA           reduce using rule 16 (expression -> RANDOM LPAREN expression RPAREN .)


state 53

    (27) arg_list -> arg_list COMMA expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    RPAREN          reduce using rule 27 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 27 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 54

    (5) statement -> PRINT LPAREN STRING RPAREN SEMICOLON .

    ID              reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    END             reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    INPUT           reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    RANDOM          reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    STRING          reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    NUMBER          reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)
    $end            reduce using rule 5 (statement -> PRINT LPAREN STRING RPAREN SEMICOLON .)


state 55

    (6) statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    END             reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INPUT           reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RANDOM          reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 56

    (8) statement -> FUNCTION ID LPAREN param_list RPAREN . COMMA COLON expression SEMICOLON
    (10) statement -> FUNCTION ID LPAREN param_list RPAREN . COLON statements END

    COMMA           shift and go to state 60
    COLON           shift and go to state 61


state 57

    (12) param_list -> param_list COMMA . ID

    ID              shift and go to state 62


state 58

    (9) statement -> FUNCTION ID LPAREN RPAREN COMMA . COLON expression SEMICOLON

    COLON           shift and go to state 63


state 59

    (11) statement -> FUNCTION ID LPAREN RPAREN COLON . statements END
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . ID EQUALS STRING SEMICOLON
    (5) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (6) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (7) statement -> . expression SEMICOLON
    (8) statement -> . FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> . FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> . FUNCTION ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> . FUNCTION ID LPAREN RPAREN COLON statements END
    (14) statement -> . END
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    ID              shift and go to state 3
    PRINT           shift and go to state 6
    FUNCTION        shift and go to state 8
    END             shift and go to state 9
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12

    statements                     shift and go to state 64
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 60

    (8) statement -> FUNCTION ID LPAREN param_list RPAREN COMMA . COLON expression SEMICOLON

    COLON           shift and go to state 65


state 61

    (10) statement -> FUNCTION ID LPAREN param_list RPAREN COLON . statements END
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . ID EQUALS STRING SEMICOLON
    (5) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (6) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (7) statement -> . expression SEMICOLON
    (8) statement -> . FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> . FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> . FUNCTION ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> . FUNCTION ID LPAREN RPAREN COLON statements END
    (14) statement -> . END
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    ID              shift and go to state 3
    PRINT           shift and go to state 6
    FUNCTION        shift and go to state 8
    END             shift and go to state 9
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12

    statements                     shift and go to state 66
    statement                      shift and go to state 2
    expression                     shift and go to state 4

state 62

    (12) param_list -> param_list COMMA ID .

    RPAREN          reduce using rule 12 (param_list -> param_list COMMA ID .)
    COMMA           reduce using rule 12 (param_list -> param_list COMMA ID .)


state 63

    (9) statement -> FUNCTION ID LPAREN RPAREN COMMA COLON . expression SEMICOLON
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 67

state 64

    (11) statement -> FUNCTION ID LPAREN RPAREN COLON statements . END
    (1) statements -> statements . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . ID EQUALS STRING SEMICOLON
    (5) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (6) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (7) statement -> . expression SEMICOLON
    (8) statement -> . FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> . FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> . FUNCTION ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> . FUNCTION ID LPAREN RPAREN COLON statements END
    (14) statement -> . END
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    END             shift and go to state 68
    ID              shift and go to state 3
    PRINT           shift and go to state 6
    FUNCTION        shift and go to state 8
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12

    statement                      shift and go to state 13
    expression                     shift and go to state 4

state 65

    (8) statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON . expression SEMICOLON
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12
    ID              shift and go to state 24

    expression                     shift and go to state 69

state 66

    (10) statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements . END
    (1) statements -> statements . statement
    (3) statement -> . ID EQUALS expression SEMICOLON
    (4) statement -> . ID EQUALS STRING SEMICOLON
    (5) statement -> . PRINT LPAREN STRING RPAREN SEMICOLON
    (6) statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (7) statement -> . expression SEMICOLON
    (8) statement -> . FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON
    (9) statement -> . FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON
    (10) statement -> . FUNCTION ID LPAREN param_list RPAREN COLON statements END
    (11) statement -> . FUNCTION ID LPAREN RPAREN COLON statements END
    (14) statement -> . END
    (15) expression -> . INPUT LPAREN RPAREN
    (16) expression -> . RANDOM LPAREN expression RPAREN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression CONCAT expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . STRING
    (24) expression -> . NUMBER
    (25) expression -> . ID
    (26) expression -> . ID LPAREN arg_list RPAREN

    END             shift and go to state 70
    ID              shift and go to state 3
    PRINT           shift and go to state 6
    FUNCTION        shift and go to state 8
    INPUT           shift and go to state 10
    RANDOM          shift and go to state 11
    LPAREN          shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 12

    statement                      shift and go to state 13
    expression                     shift and go to state 4

state 67

    (9) statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       shift and go to state 71
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 68

    (11) statement -> FUNCTION ID LPAREN RPAREN COLON statements END .
    (14) statement -> END .

  ! reduce/reduce conflict for END resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for ID resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for PRINT resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for INPUT resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for RANDOM resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for LPAREN resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for STRING resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
  ! reduce/reduce conflict for NUMBER resolved using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    ID              reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    PRINT           reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    FUNCTION        reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    END             reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    INPUT           reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    RANDOM          reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    LPAREN          reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    STRING          reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    NUMBER          reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)
    $end            reduce using rule 11 (statement -> FUNCTION ID LPAREN RPAREN COLON statements END .)

  ! END             [ reduce using rule 14 (statement -> END .) ]
  ! ID              [ reduce using rule 14 (statement -> END .) ]
  ! PRINT           [ reduce using rule 14 (statement -> END .) ]
  ! FUNCTION        [ reduce using rule 14 (statement -> END .) ]
  ! INPUT           [ reduce using rule 14 (statement -> END .) ]
  ! RANDOM          [ reduce using rule 14 (statement -> END .) ]
  ! LPAREN          [ reduce using rule 14 (statement -> END .) ]
  ! STRING          [ reduce using rule 14 (statement -> END .) ]
  ! NUMBER          [ reduce using rule 14 (statement -> END .) ]


state 69

    (8) statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . CONCAT expression

    SEMICOLON       shift and go to state 72
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    CONCAT          shift and go to state 21


state 70

    (10) statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .
    (14) statement -> END .

  ! reduce/reduce conflict for END resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for ID resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for INPUT resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for RANDOM resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    ID              reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    PRINT           reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    FUNCTION        reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    END             reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    INPUT           reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    RANDOM          reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    LPAREN          reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    STRING          reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    NUMBER          reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)
    $end            reduce using rule 10 (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END .)

  ! END             [ reduce using rule 14 (statement -> END .) ]
  ! ID              [ reduce using rule 14 (statement -> END .) ]
  ! PRINT           [ reduce using rule 14 (statement -> END .) ]
  ! FUNCTION        [ reduce using rule 14 (statement -> END .) ]
  ! INPUT           [ reduce using rule 14 (statement -> END .) ]
  ! RANDOM          [ reduce using rule 14 (statement -> END .) ]
  ! LPAREN          [ reduce using rule 14 (statement -> END .) ]
  ! STRING          [ reduce using rule 14 (statement -> END .) ]
  ! NUMBER          [ reduce using rule 14 (statement -> END .) ]


state 71

    (9) statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .

    ID              reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    PRINT           reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    FUNCTION        reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    END             reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    INPUT           reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    RANDOM          reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    STRING          reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    NUMBER          reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)
    $end            reduce using rule 9 (statement -> FUNCTION ID LPAREN RPAREN COMMA COLON expression SEMICOLON .)


state 72

    (8) statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .

    ID              reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    PRINT           reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    FUNCTION        reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    END             reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    INPUT           reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    RANDOM          reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    LPAREN          reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    STRING          reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    NUMBER          reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)
    $end            reduce using rule 8 (statement -> FUNCTION ID LPAREN param_list RPAREN COMMA COLON expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 29 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 37 resolved as shift
WARNING: reduce/reduce conflict in state 68 resolved using rule (statement -> FUNCTION ID LPAREN RPAREN COLON statements END)
WARNING: rejected rule (statement -> END) in state 68
WARNING: reduce/reduce conflict in state 70 resolved using rule (statement -> FUNCTION ID LPAREN param_list RPAREN COLON statements END)
WARNING: rejected rule (statement -> END) in state 70
